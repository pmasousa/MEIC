- Maybe, check if are processes interatcing with the system, that are not registered as expected processes;
- Ask lab professor on how to do good testing.
- How is the comunication made between client and server? UDP?
- Do we need to add security between client - server?: just authentication with assymetric keys.
- What are "upcalls" in the context of the project?
- What kind of components do we need to test? All the link layer? Or just authentication?
- Should we use perfect links or even more complex abstractions as Reliable broadcast, etc: Just add digital signatures to every message and justify that we just want integrity and authentication on every message;
- What should be the result of the consensus protocol? The index of the appended message in the sequence of blocks (stored in the array)?
- Should we stop sending not achknowledge msgs after consensus is decided/over? If, for instance, PREPARE messages sent to processes that are not correct, are not acknowledged, they will be kept sending until the process received an ACK.
- What is the timeout for the leader change timer?

- What should be the normnal flow of the append request? The request is made, a consensus is made and if the value is not decided? Should the client issue another request? Or should the request be chached and tried again by the nodes?
- How to do tests?
- What kind of tests should we make?: Types of atacks.
- Does the leader persist across rounds?
- I think we only added authentication as a dependability. What other dependabilities should we implement?
- Should we explain the flow of the IBFT protocol in the report? Should we explainn the normal case? Or just the view change Or none?

- If a node receives a PRE-PREPARE message from the leader, before calling startConsensus, what happens?